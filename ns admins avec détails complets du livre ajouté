[1mdiff --git a/src/Controllers/AuthController.cs b/src/Controllers/AuthController.cs[m
[1mindex f8d9b08..fbd89cd 100644[m
[1m--- a/src/Controllers/AuthController.cs[m
[1m+++ b/src/Controllers/AuthController.cs[m
[36m@@ -45,6 +45,11 @@[m [mnamespace LibraryAPI.Controllers[m
         private readonly RoleManager<IdentityRole> _roleManager;[m
         private readonly IConfiguration _configuration;[m
         private readonly ApplicationDbContext _context;[m
[32m+[m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// Service d'envoi d'emails pour les notifications par email[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private readonly EmailService _emailService;[m
         [m
         /// <summary>[m
         /// ✅ SERVICE DE LOGGING SERILOG - LOGS TECHNIQUES SEULEMENT[m
[36m@@ -69,6 +74,7 @@[m [mnamespace LibraryAPI.Controllers[m
             RoleManager<IdentityRole> roleManager,[m
             IConfiguration configuration,[m
             ApplicationDbContext context,[m
[32m+[m[32m            EmailService emailService,[m[41m [m
             ILogger<AuthController> logger)  // ✅ Logger pour aspects techniques seulement[m
         {[m
             _userManager = userManager;[m
[36m@@ -76,6 +82,7 @@[m [mnamespace LibraryAPI.Controllers[m
             _roleManager = roleManager;[m
             _configuration = configuration;[m
             _context = context;[m
[32m+[m[32m            _emailService = emailService;[m
             _logger = logger;[m
         }[m
 [m
[36m@@ -85,53 +92,312 @@[m [mnamespace LibraryAPI.Controllers[m
         /// INSCRIPTION D'UN NOUVEL UTILISATEUR[m
         /// Logs techniques : erreurs de création, problèmes de rôles[m
         /// </summary>[m
[31m-        [HttpPost("register")][m
[31m-        public async Task<IActionResult> Register([FromBody] RegisterModel model)[m
[32m+[m[32m[HttpPost("register")][m
[32m+[m[32mpublic async Task<IActionResult> Register([FromBody] RegisterModel model)[m
[32m+[m[32m{[m
[32m+[m[32m    try[m
[32m+[m[32m    {[m
[32m+[m[32m        // Création d'un nouvel utilisateur basé sur les données fournies[m
[32m+[m[32m        var user = new ApplicationUser[m
         {[m
[31m-            try[m
[32m+[m[32m            UserName = model.Email,[m
[32m+[m[32m            Email = model.Email,[m
[32m+[m[32m            FullName = model.FullName,[m
[32m+[m[32m            Description = model.Description[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        // Création de l'utilisateur avec le mot de passe fourni[m
[32m+[m[32m        var result = await _userManager.CreateAsync(user, model.Password);[m
[32m+[m[41m        [m
[32m+[m[32m        if (result.Succeeded)[m
[32m+[m[32m        {[m
[32m+[m[32m            // Si le rôle "User" n'existe pas, on le crée[m
[32m+[m[32m            if (!await _roleManager.RoleExistsAsync("User"))[m
             {[m
[31m-                // Création d'un nouvel utilisateur basé sur les données fournies[m
[31m-                var user = new ApplicationUser[m
[31m-                {[m
[31m-                    UserName = model.Email,[m
[31m-                    Email = model.Email,[m
[31m-                    FullName = model.FullName,[m
[31m-                    Description = model.Description[m
[31m-                };[m
[31m-[m
[31m-                // Création de l'utilisateur avec le mot de passe fourni[m
[31m-                var result = await _userManager.CreateAsync(user, model.Password);[m
[31m-                [m
[31m-                if (result.Succeeded)[m
[31m-                {[m
[31m-                    // Si le rôle "User" n'existe pas, on le crée[m
[31m-                    if (!await _roleManager.RoleExistsAsync("User"))[m
[31m-                    {[m
[31m-                        await _roleManager.CreateAsync(new IdentityRole("User"));[m
[31m-                        // ✅ LOG TECHNIQUE : Création de rôle manquant (problème de configuration)[m
[31m-                        _logger.LogWarning("🔧 Had to create missing 'User' role during registration - check initial setup");[m
[31m-                    }[m
[32m+[m[32m                await _roleManager.CreateAsync(new IdentityRole("User"));[m
[32m+[m[32m                // ✅ LOG TECHNIQUE : Création de rôle manquant (problème de configuration)[m
[32m+[m[32m                _logger.LogWarning("🔧 Had to create missing 'User' role during registration - check initial setup");[m
[32m+[m[32m            }[m
 [m
[31m-                    // On assigne le rôle "User" au nouvel utilisateur[m
[31m-                    await _userManager.AddToRoleAsync(user, "User");[m
[32m+[m[32m            // On assigne le rôle "User" au nouvel utilisateur[m
[32m+[m[32m            await _userManager.AddToRoleAsync(user, "User");[m
 [m
[31m-                    return Ok(new { Message = "User registered successfully!" });[m
[31m-                }[m
[31m-[m
[31m-                // ✅ LOG TECHNIQUE : Erreurs de validation Identity (problème technique)[m
[31m-                _logger.LogWarning("⚠️ User registration failed due to Identity validation errors: {Errors}",[m
[31m-                                  string.Join(", ", result.Errors.Select(e => e.Description)));[m
[32m+[m[32m            // ✅ NOUVEAU : Envoi de l'email de bienvenue[m
[32m+[m[32m            try[m
[32m+[m[32m            {[m
[32m+[m[32m                var welcomeSubject = "🎉 Bienvenue dans votre Bibliothèque Numérique !";[m
[32m+[m[32m                var welcomeContent = $@"[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset='UTF-8'>[m
[32m+[m[32m    <meta name='viewport' content='width=device-width, initial-scale=1.0'>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        body {{[m[41m [m
[32m+[m[32m            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;[m[41m [m
[32m+[m[32m            margin: 0;[m[41m [m
[32m+[m[32m            padding: 20px;[m[41m [m
[32m+[m[32m            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);[m
[32m+[m[32m            color: #333;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .email-container {{[m[41m [m
[32m+[m[32m            max-width: 600px;[m[41m [m
[32m+[m[32m            margin: 0 auto;[m[41m [m
[32m+[m[32m            background-color: white;[m[41m [m
[32m+[m[32m            border-radius: 15px;[m[41m [m
[32m+[m[32m            overflow: hidden;[m
[32m+[m[32m            box-shadow: 0 10px 30px rgba(0,0,0,0.2);[m
[32m+[m[32m        }}[m
[32m+[m[32m        .header {{[m[41m [m
[32m+[m[32m            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);[m
[32m+[m[32m            color: white;[m[41m [m
[32m+[m[32m            text-align: center;[m[41m [m
[32m+[m[32m            padding: 40px 20px;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .header h1 {{[m[41m [m
[32m+[m[32m            margin: 0;[m[41m [m
[32m+[m[32m            font-size: 28px;[m[41m [m
[32m+[m[32m            font-weight: 300;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .content {{[m[41m [m
[32m+[m[32m            padding: 40px 30px;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .welcome-message {{[m[41m [m
[32m+[m[32m            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);[m
[32m+[m[32m            color: white;[m
[32m+[m[32m            padding: 25px;[m[41m [m
[32m+[m[32m            border-radius: 10px;[m[41m [m
[32m+[m[32m            margin: 20px 0;[m[41m [m
[32m+[m[32m            text-align: center;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .features {{[m[41m [m
[32m+[m[32m            background-color: #f8f9fa;[m[41m [m
[32m+[m[32m            padding: 25px;[m[41m [m
[32m+[m[32m            border-radius: 10px;[m[41m [m
[32m+[m[32m            margin: 25px 0;[m
[32m+[m[32m            border-left: 5px solid #667eea;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .feature-item {{[m[41m [m
[32m+[m[32m            margin: 15px 0;[m[41m [m
[32m+[m[32m            display: flex;[m[41m [m
[32m+[m[32m            align-items: center;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .feature-icon {{[m[41m [m
[32m+[m[32m            width: 30px;[m[41m [m
[32m+[m[32m            height: 30px;[m[41m [m
[32m+[m[32m            background: #667eea;[m[41m [m
[32m+[m[32m            border-radius: 50%;[m[41m [m
[32m+[m[32m            display: inline-flex;[m[41m [m
[32m+[m[32m            align-items: center;[m[41m [m
[32m+[m[32m            justify-content: center;[m[41m [m
[32m+[m[32m            margin-right: 15px;[m
[32m+[m[32m            color: white;[m
[32m+[m[32m            font-weight: bold;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .cta-button {{[m[41m [m
[32m+[m[32m            display: inline-block;[m[41m [m
[32m+[m[32m            padding: 15px 30px;[m[41m [m
[32m+[m[32m            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);[m
[32m+[m[32m            color: white;[m[41m [m
[32m+[m[32m            text-decoration: none;[m[41m [m
[32m+[m[32m            border-radius: 25px;[m[41m [m
[32m+[m[32m            font-weight: bold;[m
[32m+[m[32m            text-align: center;[m
[32m+[m[32m            margin: 20px 0;[m
[32m+[m[32m            transition: transform 0.3s ease;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .cta-button:hover {{[m[41m [m
[32m+[m[32m            transform: translateY(-2px);[m
[32m+[m[32m        }}[m
[32m+[m[32m        .footer {{[m[41m [m
[32m+[m[32m            text-align: center;[m[41m [m
[32m+[m[32m            color: #666;[m[41m [m
[32m+[m[32m            font-size: 14px;[m[41m [m
[32m+[m[32m            padding: 30px;[m
[32m+[m[32m            background-color: #f8f9fa;[m
[32m+[m[32m            border-top: 1px solid #eee;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .user-info {{[m[41m [m
[32m+[m[32m            background-color: #e3f2fd;[m[41m [m
[32m+[m[32m            padding: 20px;[m[41m [m
[32m+[m[32m            border-radius: 8px;[m[41m [m
[32m+[m[32m            margin: 20px 0;[m
[32m+[m[32m            border: 1px solid #bbdefb;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .highlight {{[m[41m [m
[32m+[m[32m            color: #667eea;[m[41m [m
[32m+[m[32m            font-weight: bold;[m[41m [m
[32m+[m[32m        }}[m
[32m+[m[32m        .stats {{[m[41m [m
[32m+[m[32m            display: flex;[m[41m [m
[32m+[m[32m            justify-content: space-around;[m[41m [m
[32m+[m[32m            margin: 25px 0;[m
[32m+[m[32m            text-align: center;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .stat-item {{[m[41m [m
[32m+[m[32m            flex: 1;[m[41m [m
[32m+[m[32m            padding: 15px;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .stat-number {{[m[41m [m
[32m+[m[32m            font-size: 24px;[m[41m [m
[32m+[m[32m            font-weight: bold;[m[41m [m
[32m+[m[32m            color: #667eea;[m
[32m+[m[32m        }}[m
[32m+[m[32m        .stat-label {{[m[41m [m
[32m+[m[32m            font-size: 12px;[m[41m [m
[32m+[m[32m            color: #666;[m[41m [m
[32m+[m[32m            text-transform: uppercase;[m
[32m+[m[32m        }}[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <div class='email-container'>[m
[32m+[m[32m        <div class='header'>[m
[32m+[m[32m            <h1>📚 Bibliothèque Numérique</h1>[m
[32m+[m[32m            <p style='margin: 10px 0 0 0; opacity: 0.9;'>Votre nouvelle aventure littéraire commence ici !</p>[m
[32m+[m[32m        </div>[m
[32m+[m[41m        [m
[32m+[m[32m        <div class='content'>[m
[32m+[m[32m            <h2>Bonjour <span class='highlight'>{user.FullName}</span> ! 👋</h2>[m
[32m+[m[41m            [m
[32m+[m[32m            <div class='welcome-message'>[m
[32m+[m[32m                <h3 style='margin: 0 0 10px 0;'>🎉 Félicitations !</h3>[m
[32m+[m[32m                <p style='margin: 0; font-size: 16px;'>Votre compte a été créé avec succès. Vous faites maintenant partie de notre communauté de lecteurs passionnés !</p>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div class='user-info'>[m
[32m+[m[32m                <h4 style='margin-top: 0; color: #1976d2;'>📋 Informations de votre compte :</h4>[m
[32m+[m[32m                <p><strong>Email :</strong> {user.Email}</p>[m
[32m+[m[32m                <p><strong>Nom complet :</strong> {user.FullName}</p>[m
[32m+[m[32m                <p><strong>Date d'inscription :</strong> {DateTime.Now:dd/MM/yyyy à HH:mm}</p>[m
[32m+[m[32m                {(!string.IsNullOrEmpty(user.Description) ? $"<p><strong>Description :</strong> {user.Description}</p>" : "")}[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div class='features'>[m
[32m+[m[32m                <h4 style='margin-top: 0; color: #333;'>🚀 Découvrez ce que vous pouvez faire :</h4>[m
                 [m
[31m-                return BadRequest(result.Errors);[m
[32m+[m[32m                <div class='feature-item'>[m
[32m+[m[32m                    <div class='feature-icon'>📖</div>[m
[32m+[m[32m                    <div>[m
[32m+[m[32m                        <strong>Parcourir la bibliothèque</strong><br>[m
[32m+[m[32m                        <small>Explorez notre collection de livres et magazines numériques</small>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[41m                [m
[32m+[m[32m                <div class='feature-item'>[m
[32m+[m[32m                    <div class='feature-icon'>⬇️</div>[m
[32m+[m[32m                    <div>[m
[32m+[m[32m                        <strong>Télécharger vos lectures</strong><br>[m
[32m+[m[32m                        <small>Accédez à vos livres préférés hors ligne</small>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[41m                [m
[32m+[m[32m                <div class='feature-item'>[m
[32m+[m[32m                    <div class='feature-icon'>❤️</div>[m
[32m+[m[32m                    <div>[m
[32m+[m[32m                        <strong>Créer votre liste de favoris</strong><br>[m
[32m+[m[32m                        <small>Sauvegardez vos lectures coup de cœur</small>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[41m                [m
[32m+[m[32m                <div class='feature-item'>[m
[32m+[m[32m                    <div class='feature-icon'>⭐</div>[m
[32m+[m[32m                    <div>[m
[32m+[m[32m                        <strong>Noter et commenter</strong><br>[m
[32m+[m[32m                        <small>Partagez vos avis avec la communauté</small>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[41m                [m
[32m+[m[32m                <div class='feature-item'>[m
[32m+[m[32m                    <div class='feature-icon'>📊</div>[m
[32m+[m[32m                    <div>[m
[32m+[m[32m                        <strong>Suivre votre historique</strong><br>[m
[32m+[m[32m                        <small>Retrouvez facilement vos lectures passées</small>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div class='stats'>[m
[32m+[m[32m                <div class='stat-item'>[m
[32m+[m[32m                    <div class='stat-number'>1000+</div>[m
[32m+[m[32m                    <div class='stat-label'>Livres disponibles</div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class='stat-item'>[m
[32m+[m[32m                    <div class='stat-number'>500+</div>[m
[32m+[m[32m                    <div class='stat-label'>Magazines</div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class='stat-item'>[m
[32m+[m[32m                    <div class='stat-number'>24/7</div>[m
[32m+[m[32m                    <div class='stat-label'>Accès libre</div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div style='text-align: center; margin: 30px 0;'>[m
[32m+[m[32m                <a href='#' class='cta-button'>🚀 Commencer à explorer</a>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div style='background-color: #fff3e0; padding: 20px; border-radius: 8px; border-left: 4px solid #ff9800; margin: 25px 0;'>[m
[32m+[m[32m                <h4 style='margin-top: 0; color: #ef6c00;'>💡 Conseil pour bien commencer :</h4>[m
[32m+[m[32m                <p style='margin-bottom: 0;'>Complétez votre profil et ajoutez une photo pour personnaliser votre expérience. Vous pouvez également parcourir nos catégories populaires pour découvrir de nouveaux genres !</p>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m            <div style='background-color: #f3e5f5; padding: 20px; border-radius: 8px; border-left: 4px solid #9c27b0; margin: 25px 0;'>[m
[32m+[m[32m                <h4 style='margin-top: 0; color: #7b1fa2;'>🔐 Sécurité de votre compte :</h4>[m
[32m+[m[32m                <p style='margin-bottom: 0;'>Gardez vos identifiants en sécurité et n'hésitez pas à nous contacter si vous remarquez une activité suspecte sur votre compte.</p>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[41m        [m
[32m+[m[32m        <div class='footer'>[m
[32m+[m[32m            <p><strong>Merci de nous avoir rejoints ! 🙏</strong></p>[m
[32m+[m[32m            <p>L'équipe de la Bibliothèque Numérique</p>[m
[32m+[m[32m            <hr style='margin: 20px 0; border: none; border-top: 1px solid #eee;'>[m
[32m+[m[32m            <p style='font-size: 12px; color: #999;'>[m
[32m+[m[32m                📧 Ceci est un email automatique de bienvenue<br>[m
[32m+[m[32m                📅 Envoyé le {DateTime.Now:dd/MM/yyyy à HH:mm:ss}<br>[m
[32m+[m[32m                🌐 LibraryAPI - Votre bibliothèque numérique personnelle[m
[32m+[m[32m            </p>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>";[m
[32m+[m
[32m+[m[32m                // Envoi de l'email de bienvenue[m
[32m+[m[32m                await _emailService.SendEmailAsync(user.Email, welcomeSubject, welcomeContent);[m
[32m+[m[41m                [m
[32m+[m[32m                // ✅ LOG TECHNIQUE : Succès d'envoi de l'email de bienvenue[m
[32m+[m[32m                _logger.LogInformation("✅ Welcome email sent successfully to new user {UserEmail} ({UserId})",[m[41m [m
[32m+[m[32m                                      user.Email, user.Id);[m
             }[m
[31m-            catch (Exception ex)[m
[32m+[m[32m            catch (Exception emailEx)[m
             {[m
[31m-                // ✅ LOG TECHNIQUE : Exception non gérée (problème système)[m
[31m-                _logger.LogError(ex, "❌ Technical error during user registration");[m
[31m-                return StatusCode(500, "An internal error occurred during registration");[m
[32m+[m[32m                // ✅ LOG TECHNIQUE : Erreur d'envoi d'email de bienvenue (non bloquante)[m
[32m+[m[32m                _logger.LogWarning(emailEx, "⚠️ Failed to send welcome email to new user {UserEmail} ({UserId})",[m[41m [m
[32m+[m[32m                                  user.Email, user.Id);[m
[32m+[m[32m                // L'inscription continue même si l'email échoue[m
             }[m
[32m+[m
[32m+[m[32m            return Ok(new {[m[41m [m
[32m+[m[32m                Message = "User registered successfully!",[m[41m [m
[32m+[m[32m                UserId = user.Id,[m
[32m+[m[32m                Email = user.Email,[m
[32m+[m[32m                FullName = user.FullName[m
[32m+[m[32m            });[m
         }[m
 [m
[32m+[m[32m        // ✅ LOG TECHNIQUE : Erreurs de validation Identity (problème technique)[m
[32m+[m[32m        _logger.LogWarning("⚠️ User registration failed due to Identity validation errors: {Errors}",[m
[32m+[m[32m                          string.Join(", ", result.Errors.Select(e => e.Description)));[m
[32m+[m[41m        [m
[32m+[m[32m        return BadRequest(result.Errors);[m
[32m+[m[32m    }[m
[32m+[m[32m    catch (Exception ex)[m
[32m+[m[32m    {[m
[32m+[m[32m        // ✅ LOG TECHNIQUE : Exception non gérée (problème système)[m
[32m+[m[32m        _logger.LogError(ex, "❌ Technical error during user registration");[m
[32m+[m[32m        return StatusCode(500, "An internal error occurred during registration");[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
         /// <summary>[m
         /// CONNEXION D'UN UTILISATEUR[m
         /// Logs techniques : erreurs de génération JWT, problèmes de configuration[m
[1mdiff --git a/src/Controllers/BookMagazineController.cs b/src/Controllers/BookMagazineController.cs[m
[1mindex b254600..7db86d6 100644[m
[1m--- a/src/Controllers/BookMagazineController.cs[m
[1m+++ b/src/Controllers/BookMagazineController.cs[m
[36m@@ -46,6 +46,11 @@[m [mnamespace LibraryAPI.Controllers[m
         /// </summary>[m
         private readonly ApplicationDbContext _context;[m
 [m
[32m+[m[32m        /// <summary>[m
[32m+[m[32m        /// Service d'envoi d'emails pour les notifications par email[m
[32m+[m[32m        /// </summary>[m
[32m+[m[32m        private readonly EmailService _emailService;[m
[32m+[m
         /// <summary>[m
         /// ✅ SERVICE DE LOGGING SERILOG - LOGS TECHNIQUES SEULEMENT[m
         /// Utilisé pour :[m
[36m@@ -71,10 +76,12 @@[m [mnamespace LibraryAPI.Controllers[m
         /// Constructeur avec injection de dépendances[m
         /// </summary>[m
         /// <param name="context">Contexte de base de données</param>[m
[32m+[m[32m        /// <param name="emailService">Service d'envoi d'emails</param>[m
         /// <param name="logger">✅ Service de logging pour aspects techniques</param>[m
[31m-        public BookMagazineController(ApplicationDbContext context, ILogger<BookMagazineController> logger)[m
[32m+[m[32m        public BookMagazineController(ApplicationDbContext context, EmailService emailService, ILogger<BookMagazineController> logger)[m
         {[m
             _context = context;[m
[32m+[m[32m            _emailService = emailService;[m
             _logger = logger;  // ✅ Ajout du service de logging technique[m
         }[m
 [m
[36m@@ -240,80 +247,142 @@[m [mnamespace LibraryAPI.Controllers[m
                 _context.BooksMagazines.Add(bookMagazine);[m
                 await _context.SaveChangesAsync();[m
 [m
[31m-                // Création de notifications pour les admins (gestion d'erreurs simplifiée)[m
[32m+[m[32m                // ✅ NOUVEAU : Création de notifications ET envoi d'emails pour les admins[m
                 try[m
                 {[m
                     var adminRole = await _context.Roles.FirstOrDefaultAsync(r => r.Name == "Admin");[m
                     if (adminRole != null)[m
                     {[m
[32m+[m[32m                        // Récupérer les admins avec leurs emails[m
                         var adminUsers = await _context.UserRoles[m
                             .Where(ur => ur.RoleId == adminRole.Id)[m
[31m-                            .Select(ur => ur.UserId)[m
[32m+[m[32m                            .Join(_context.Users,[m
[32m+[m[32m                                  ur => ur.UserId,[m
[32m+[m[32m                                  u => u.Id,[m
[32m+[m[32m                                  (ur, u) => new { u.Id, u.Email, u.UserName })[m
                             .ToListAsync();[m
 [m
[31m-                        var notification = new Notification[m
[32m+[m[32m                        if (adminUsers.Any())[m
                         {[m
[31m-                            Subject = "📚 Nouveau livre ajouté à la bibliothèque",[m
[31m-                            Content = $@"[m
[31m-                        <!DOCTYPE html>[m
[31m-                        <html>[m
[31m-                        <head>[m
[31m-                            <style>[m
[31m-                                body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }}[m
[31m-                                .container {{ max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; }}[m
[31m-                                .header {{ text-align: center; color: #333; margin-bottom: 30px; }}[m
[31m-                                .book-info {{ background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }}[m
[31m-                                .footer {{ text-align: center; color: #666; font-size: 14px; margin-top: 30px; }}[m
[31m-                                .btn {{ display: inline-block; padding: 12px 24px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px; }}[m
[31m-                            </style>[m
[31m-                        </head>[m
[31m-                        <body>[m
[31m-                            <div class='container'>[m
[31m-                                <div class='header'>[m
[31m-                                    <h1>📚 Nouveau livre ajouté !</h1>[m
[31m-                                </div>[m
[31m-                                <p>Bonjour Administrateur,</p>[m
[31m-                                <p>Un nouveau livre vient d'être ajouté à la bibliothèque numérique :</p>[m
[31m-                                <div class='book-info'>[m
[31m-                                    <h3>📖 {bookMagazine.Title}</h3>[m
[31m-                                    <p><strong>Auteur :</strong> {author.Name}</p>[m
[31m-                                    <p><strong>Date d'ajout :</strong> {DateTime.Now:dd/MM/yyyy à HH:mm}</p>[m
[31m-                                </div>[m
[31m-                                <p>Vous pouvez consulter ce livre et le modérer si nécessaire via votre dashboard administrateur.</p>[m
[31m-                                <p>Le nouveau livre a été ajouté par l'utilisateur {userId}</p>[m
[31m-                                <div class='footer'>[m
[31m-                                    <p>📧 Ceci est un email automatique de votre Library API</p>[m
[31m-                                </div>[m
[31m-                            </div>[m
[31m-                        </body>[m
[31m-                        </html>",[m
[31m-                            CreatedAt = DateTime.Now,[m
[31m-                            IsRead = false[m
[31m-                        };[m
[32m+[m[32m                            // Créer la notification en base[m
[32m+[m[32m                            var notification = new Notification[m
[32m+[m[32m                            {[m
[32m+[m[32m                                Subject = "📚 Nouveau livre ajouté à la bibliothèque",[m
[32m+[m[32m                                Content = $"Un nouveau livre/magazine a été ajouté par l'utilisateur {userId} : 📖 {bookMagazine.Title}",[m
[32m+[m[32m                                CreatedAt = DateTime.Now,[m
[32m+[m[32m                                IsRead = false[m
[32m+[m[32m                            };[m
 [m
[31m-                        _context.Notifications.Add(notification);[m
[31m-                        await _context.SaveChangesAsync();[m
[32m+[m[32m                            _context.Notifications.Add(notification);[m
[32m+[m[32m                            await _context.SaveChangesAsync();[m
 [m
[31m-                        foreach (var adminId in adminUsers)[m
[31m-                        {[m
[31m-                            _context.UserNotifications.Add(new UserNotification[m
[32m+[m[32m                            // Associer la notification à chaque admin[m
[32m+[m[32m                            foreach (var admin in adminUsers)[m
[32m+[m[32m                            {[m
[32m+[m[32m                                _context.UserNotifications.Add(new UserNotification[m
[32m+[m[32m                                {[m
[32m+[m[32m                                    UserId = admin.Id,[m
[32m+[m[32m                                    NotificationId = notification.Id,[m
[32m+[m[32m                                    IsSent = false[m
[32m+[m[32m                                });[m
[32m+[m[32m                            }[m
[32m+[m[32m                            await _context.SaveChangesAsync();[m
[32m+[m
[32m+[m[32m                            // ✅ NOUVEAU : Envoyer les emails aux admins[m
[32m+[m[32m                            var emailSubject = "📚 Nouveau livre ajouté à la bibliothèque";[m
[32m+[m[32m                            var emailContent = $@"[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }}[m
[32m+[m[32m        .container {{ max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }}[m
[32m+[m[32m        .header {{ text-align: center; color: #333; margin-bottom: 30px; border-bottom: 2px solid #007bff; padding-bottom: 20px; }}[m
[32m+[m[32m        .book-info {{ background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #007bff; }}[m
[32m+[m[32m        .footer {{ text-align: center; color: #666; font-size: 14px; margin-top: 30px; border-top: 1px solid #eee; padding-top: 20px; }}[m
[32m+[m[32m        .btn {{ display: inline-block; padding: 12px 24px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px; margin-top: 15px; }}[m
[32m+[m[32m        .highlight {{ color: #007bff; font-weight: bold; }}[m
[32m+[m[32m        .info-row {{ margin: 10px 0; }}[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m    <div class='container'>[m
[32m+[m[32m        <div class='header'>[m
[32m+[m[32m            <h1>📚 Nouveau livre ajouté !</h1>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <p>Bonjour Administrateur,</p>[m
[32m+[m[32m        <p>Un nouveau livre/magazine vient d'être ajouté à la bibliothèque numérique :</p>[m
[32m+[m[32m        <div class='book-info'>[m
[32m+[m[32m            <h3>📖 {bookMagazine.Title}</h3>[m
[32m+[m[32m            <div class='info-row'><strong>Auteur :</strong> <span class='highlight'>{author.Name}</span></div>[m
[32m+[m[32m            <div class='info-row'><strong>Catégorie :</strong> <span class='highlight'>{category.Name}</span></div>[m
[32m+[m[32m            <div class='info-row'><strong>Date d'ajout :</strong> {DateTime.Now:dd/MM/yyyy à HH:mm}</div>[m
[32m+[m[32m            <div class='info-row'><strong>Ajouté par :</strong> Utilisateur ID {userId}</div>[m
[32m+[m[32m            {(!string.IsNullOrEmpty(model.Description) ? $"<div class='info-row'><strong>Description :</strong> {model.Description}</div>" : "")}[m
[32m+[m[32m            {(!string.IsNullOrEmpty(model.Tags) ? $"<div class='info-row'><strong>Tags :</strong> {model.Tags}</div>" : "")}[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <p>Vous pouvez consulter ce livre et le modérer si nécessaire via votre dashboard administrateur.</p>[m
[32m+[m[32m        <p><em>Ce livre est maintenant disponible pour tous les utilisateurs de la bibliothèque.</em></p>[m
[32m+[m[32m        <div class='footer'>[m
[32m+[m[32m            <p>📧 Ceci est un email automatique de votre Library API</p>[m
[32m+[m[32m            <p>📅 Envoyé le {DateTime.Now:dd/MM/yyyy à HH:mm:ss}</p>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>";[m
[32m+[m
[32m+[m[32m                            // Envoyer l'email à chaque admin[m
[32m+[m[32m                            int emailsSent = 0;[m
[32m+[m[32m                            int emailsFailed = 0;[m
[32m+[m
[32m+[m[32m                            foreach (var admin in adminUsers)[m
                             {[m
[31m-                                UserId = adminId,[m
[31m-                                NotificationId = notification.Id,[m
[31m-                                IsSent = false[m
[31m-                            });[m
[32m+[m[32m                                if (!string.IsNullOrEmpty(admin.Email))[m
[32m+[m[32m                                {[m
[32m+[m[32m                                    try[m
[32m+[m[32m                                    {[m
[32m+[m[32m                                        await _emailService.SendEmailAsync(admin.Email, emailSubject, emailContent);[m
[32m+[m[32m                                        emailsSent++;[m
[32m+[m
[32m+[m[32m                                        // Log de succès d'envoi[m
[32m+[m[32m                                        _logger.LogInformation("✅ Email notification sent to admin {AdminEmail} for new book {BookTitle}",[m
[32m+[m[32m                                                              admin.Email, bookMagazine.Title);[m
[32m+[m[32m                                    }[m
[32m+[m[32m                                    catch (Exception emailEx)[m
[32m+[m[32m                                    {[m
[32m+[m[32m                                        emailsFailed++;[m
[32m+[m[32m                                        // ✅ LOG TECHNIQUE : Erreur d'envoi d'email (non bloquante)[m
[32m+[m[32m                                        _logger.LogWarning(emailEx, "⚠️ Failed to send email notification to admin {AdminEmail} for book {BookId}",[m
[32m+[m[32m                                                          admin.Email, bookMagazine.Id);[m
[32m+[m[32m                                    }[m
[32m+[m[32m                                }[m
[32m+[m[32m                                else[m
[32m+[m[32m                                {[m
[32m+[m[32m                                    emailsFailed++;[m
[32m+[m[32m                                    _logger.LogWarning("⚠️ Admin user {AdminId} has no email address - cannot send notification", admin.Id);[m
[32m+[m[32m                                }[m
[32m+[m[32m                            }[m
[32m+[m
[32m+[m[32m                            // Log du résumé d'envoi[m
[32m+[m[32m                            _logger.LogInformation("📧 Email notifications summary - Sent: {EmailsSent}, Failed: {EmailsFailed}, Book: {BookTitle}",[m
[32m+[m[32m                                                  emailsSent, emailsFailed, bookMagazine.Title);[m
                         }[m
[31m-                        await _context.SaveChangesAsync();[m
                     }[m
                 }[m
                 catch (Exception ex)[m
                 {[m
[31m-                    // ✅ LOG TECHNIQUE : Erreur dans la création de notifications (non bloquante)[m
[31m-                    _logger.LogWarning(ex, "⚠️ Failed to create admin notifications for new book upload - BookId: {BookId}", bookMagazine.Id);[m
[32m+[m[32m                    // ✅ LOG TECHNIQUE : Erreur dans la création de notifications/emails (non bloquante)[m
[32m+[m[32m                    _logger.LogWarning(ex, "⚠️ Failed to create admin notifications/emails for new book upload - BookId: {BookId}", bookMagazine.Id);[m
                     // Continue sans faire échouer l'upload principal[m
                 }[m
 [m
[31m-                return Ok(new { Message = "Book or magazine added successfully!", CoverImageUrl = coverImagePath });[m
[32m+[m[32m                return Ok(new[m
[32m+[m[32m                {[m
[32m+[m[32m                    Message = "Book or magazine added successfully!",[m
[32m+[m[32m                    CoverImageUrl = coverImagePath,[m
[32m+[m[32m                    BookId = bookMagazine.Id,[m
[32m+[m[32m                    Title = bookMagazine.Title[m
[32m+[m[32m                });[m
             }[m
             catch (UnauthorizedAccessException ex)[m
             {[m
[36m@@ -341,6 +410,7 @@[m [mnamespace LibraryAPI.Controllers[m
             }[m
         }[m
 [m
[32m+[m
         /// <summary>[m
         /// OBTENIR LA LISTE DES LIVRES/MAGAZINES[m
         /// Logs techniques : erreurs de requêtes, jointures nulles[m
[1mdiff --git a/src/Controllers/NotificationController.cs b/src/Controllers/NotificationController.cs[m
[1mindex 7c47b40..85ecfcb 100644[m
[1m--- a/src/Controllers/NotificationController.cs[m
[1m+++ b/src/Controllers/NotificationController.cs[m
[36m@@ -224,7 +224,7 @@[m [mnamespace LibraryAPI.Controllers[m
                         var content = userNotification.Notification.Content ?? "";[m
 [m
                         // Tentative d'envoi de l'email[m
[31m-                        await _emailService.SendEmailAsync(user.Email, subject, content);[m
[32m+[m[32m                        // await _emailService.SendEmailAsync(user.Email, subject, content);[m
                         [m
                         // Marquage comme envoyé[m
                         userNotification.IsSent = true;[m
[1mdiff --git a/src/appsettings.json b/src/appsettings.json[m
[1mindex 9180871..cf66222 100644[m
[1m--- a/src/appsettings.json[m
[1m+++ b/src/appsettings.json[m
[36m@@ -60,7 +60,7 @@[m
     "SmtpServer": "smtp.gmail.com",[m
     "Port": "587",[m
     "SenderName": "Nicolas Library API",[m
[31m-    "SenderEmail": "noreply@library.com",[m
[32m+[m[32m    "SenderEmail": "ndxdev@gmail.com",[m
     "AdminEmail": "admin@library.com",[m
     "Username": "ndxdev@gmail.com",[m
     "Password": "PassApp",[m
